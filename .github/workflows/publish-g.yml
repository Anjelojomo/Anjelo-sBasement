name: PublishG

concurrency:
  group: publish

on: workflow_dispatch

jobs:
  build:
    runs-on: [self-hosted, linux]

    steps:
#    - name: Install dependencies
#      run: sudo apt-get install -y python3-paramiko

    - uses: actions/checkout@v3.6.0
      with:
        submodules: 'recursive'

    # Corvax-Secrets-Start
    - name: Setup secrets
      env:
        SSH_KEY: ${{ secrets.SECRETS_PRIVATE_KEY }}
        FIRST: 's#""#'
        SECOND: '#g'
      if: ${{ env.SSH_KEY != '' }}
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SECRETS_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "HOST *" > ~/.ssh/config
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        git -c submodule.Secrets.update=checkout submodule update --init
        cp -R Secrets/Resources/Prototypes Resources/Prototypes/CorvaxSecrets
        cp -R Secrets/Resources/ServerPrototypes Resources/Prototypes/CorvaxSecretsServer
        cp -R Secrets/Resources/Locale Resources/Locale/ru-RU/corvax-secrets
        cp -R Secrets/Resources/Textures Resources/Textures/CorvaxSecrets
        rm Resources/Prototypes/CorvaxSecrets/ghost-themes.yml
        rm Resources/Prototypes/CorvaxSecrets/sponsor-tiers.yml
        cp Secret_CM/sponsor-tiers.yml Resources/Prototypes/CorvaxSecrets/sponsor-tiers.yml
        cp Secret_CM/ghost-themes.yml Resources/Prototypes/CorvaxSecrets/ghost-themes.yml
        echo ${{ secrets.BOOST_URL }}
        FIRST+=${{ secrets.BOOST_URL }}
        FIRST+=$SECOND
        echo $FIRST
        sed -i $FIRST Content.Server/_CM14/CVarReplacer/CVarReplacerSystem.cs
    # Corvax-Secrets-End

    - name: Get Engine Tag
      run: |
        cd RobustToolbox
        git fetch --depth=1

    - name: Install dependencies
      run: dotnet restore

    - name: Build Packaging
      run: dotnet build Content.Packaging --configuration Release --no-restore /m

    - name: Package server
      run: dotnet run --project Content.Packaging server --platform win-x64 --platform linux-x64 --platform osx-x64 --platform linux-arm64

    - name: Package client
      run: dotnet run --project Content.Packaging client --no-wipe-release

    - name: Update Build Info
      env:
        FORK_ID: ${{ vars.FORK_ID }}
      run: Tools/gen_build_info.py

    - name: Shuffle files around
      run: |
        mkdir "release/${{ github.sha }}"
        mv release/*.zip "release/${{ github.sha }}"

    - name: Upload files to mothership
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.BUILDS_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "HOST *" > ~/.ssh/config
        echo "StrictHostKeyChecking no" >> ~/.ssh/config
        rsync -avzr --ignore-existing -e ssh release/${{ github.sha }} ${{ secrets.BUILDS_USERNAME }}@${{ secrets.BUILDS_HOST }}:${{ secrets.BUILDS_PATH }}

    - name: Update manifest JSON
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.BUILDS_HOST }}
        username: ${{ secrets.BUILDS_USERNAME }}
        key: ${{ secrets.BUILDS_SSH_KEY }}
        script: node ~/scripts/push_to_manifest.js -fork ${{ vars.FORK_ID }} -id ${{ github.sha }}
